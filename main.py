"""
VKinder - –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –≤ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import os
import logging
from datetime import datetime
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.utils import get_random_id

from database import Database
from vk_service import VKService
from config import VK_GROUP_TOKEN, VK_USER_TOKEN, DB_CONFIG

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('vkinder.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)


class VKinderBot:
    """–ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ VKinder"""

    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        self.vk_session = vk_api.VkApi(token=VK_GROUP_TOKEN)
        self.vk = self.vk_session.get_api()
        self.longpoll = VkLongPoll(self.vk_session)
        self.db = Database(**DB_CONFIG)

        # –°–æ–∑–¥–∞—ë–º –æ—Ç–¥–µ–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞ (—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Ç–æ–∫–µ–Ω–æ–º)
        self.user_session = vk_api.VkApi(token=VK_USER_TOKEN)
        self.vk_service = VKService(self.vk_session, self.user_session)

        # –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.user_states = {}

    def get_main_keyboard(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
        keyboard = VkKeyboard(one_time=True)
        keyboard.add_button('üîç –ü–æ–∏—Å–∫', VkKeyboardColor.PRIMARY)
        keyboard.add_button('‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω—ã–µ', VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', VkKeyboardColor.SECONDARY)  # –£–±—Ä–∞–ª–∏ —ç–º–æ–¥–∑–∏
        keyboard.add_button('‚ÑπÔ∏è –ü–æ–º–æ—â—å', VkKeyboardColor.SECONDARY)
        return keyboard.get_keyboard()

    def get_search_keyboard(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞"""
        keyboard = VkKeyboard(one_time=True)
        keyboard.add_button('‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', VkKeyboardColor.POSITIVE)
        keyboard.add_button('üëé –í —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', VkKeyboardColor.NEGATIVE)
        keyboard.add_line()
        keyboard.add_button('‚ñ∂Ô∏è –°–ª–µ–¥—É—é—â–∏–π', VkKeyboardColor.PRIMARY)
        keyboard.add_button('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', VkKeyboardColor.SECONDARY)
        return keyboard.get_keyboard()

    def get_settings_keyboard(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        keyboard = VkKeyboard(one_time=True)
        keyboard.add_button('üöª –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª', VkKeyboardColor.PRIMARY)
        keyboard.add_button('üéÇ –ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç', VkKeyboardColor.PRIMARY)
        keyboard.add_line()
        keyboard.add_button('üèôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥', VkKeyboardColor.PRIMARY)
        keyboard.add_button('üìä –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', VkKeyboardColor.SECONDARY)
        keyboard.add_line()
        keyboard.add_button('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', VkKeyboardColor.SECONDARY)
        return keyboard.get_keyboard()

    def get_favorites_keyboard(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö"""
        keyboard = VkKeyboard(one_time=True)
        keyboard.add_button('üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö', VkKeyboardColor.PRIMARY)
        keyboard.add_button('üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö', VkKeyboardColor.NEGATIVE)
        keyboard.add_line()
        keyboard.add_button('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', VkKeyboardColor.SECONDARY)
        return keyboard.get_keyboard()

    def send_message(self, user_id, message, keyboard=None, attachment=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        try:
            self.vk.messages.send(
                user_id=user_id,
                message=message,
                keyboard=keyboard,
                attachment=attachment,
                random_id=get_random_id()
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

    def handle_start(self, user_id):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            user_info = self.vk_service.get_user_info(user_id)
            if not user_info:
                self.send_message(user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.")
                return

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
            self.db.add_user(user_info)

            welcome_msg = f"""üëã –ü—Ä–∏–≤–µ—Ç, {user_info['first_name']}!

ü§ñ –Ø VKinder - –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –≤ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ!

‚ú® –ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –ò—Å–∫–∞—Ç—å –ª—é–¥–µ–π –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –ø–æ –≤–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª–µ–π
‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏—Ö—Å—è –ª—é–¥–µ–π –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫

üöÄ –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"""

            self.send_message(user_id, welcome_msg, self.get_main_keyboard())

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_start –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            self.send_message(user_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    def handle_search(self, user_id):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –ë–î (–∑–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!)
            user_info = self.db.get_user(user_id)
            if not user_info:
                self.send_message(user_id, "‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
                return

            # –ò—â–µ–º –ª—é–¥–µ–π –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤
            self.send_message(user_id, "üîç –ò—â—É –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ª—é–¥–µ–π –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞...")

            candidates = self.vk_service.search_people(user_info)
            if not candidates:
                self.send_message(
                    user_id,
                    "üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –Ω–∞—à–µ–ª –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.",
                    self.get_main_keyboard()
                )
                return

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            self.user_states[user_id] = {
                'candidates': candidates,
                'current_index': 0,
                'mode': 'search'
            }

            self.show_next_candidate(user_id)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_search –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    def show_next_candidate(self, user_id):
        """–ü–æ–∫–∞–∑ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"""
        try:
            if user_id not in self.user_states:
                self.send_message(user_id, "‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫", self.get_main_keyboard())
                return

            state = self.user_states[user_id]
            candidates = state['candidates']
            current_index = state['current_index']

            if current_index >= len(candidates):
                self.send_message(
                    user_id,
                    "üéâ –í—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ª—é–¥–µ–π!\n\n–•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫?",
                    self.get_main_keyboard()
                )
                del self.user_states[user_id]
                return

            candidate = candidates[current_index]

            # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
            photos = self.vk_service.get_popular_photos(candidate['id'])

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = f"""üë§ {candidate['first_name']} {candidate['last_name']}
üéÇ {candidate.get('age', '–ù–µ —É–∫–∞–∑–∞–Ω')} –ª–µ—Ç
üèôÔ∏è {candidate.get('city', '–ì–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω')}
üîó https://vk.com/id{candidate['id']}

üì∏ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:"""

            # –§–æ—Ä–º–∏—Ä—É–µ–º attachment –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            attachments = []
            for photo in photos[:3]:  # –ú–∞–∫—Å–∏–º—É–º 3 —Ñ–æ—Ç–æ
                attachments.append(f"photo{photo['owner_id']}_{photo['id']}")

            attachment = ','.join(attachments) if attachments else None

            self.send_message(user_id, message, self.get_search_keyboard(), attachment)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
            state['current_candidate'] = candidate

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ show_next_candidate –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.")

    def handle_next_candidate(self, user_id):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∫–∞–Ω–¥–∏–¥–∞—Ç—É"""
        if user_id in self.user_states:
            self.user_states[user_id]['current_index'] += 1
            self.show_next_candidate(user_id)
        else:
            self.send_message(user_id, "‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫", self.get_main_keyboard())

    def handle_add_to_favorites(self, user_id):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"""
        try:
            if user_id not in self.user_states:
                self.send_message(user_id, "‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫", self.get_main_keyboard())
                return

            state = self.user_states[user_id]
            if 'current_candidate' not in state:
                self.send_message(user_id, "‚ùå –ù–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞")
                return

            candidate = state['current_candidate']

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –≤ –ë–î —Å –∏–º–µ–Ω–∞–º–∏
            success = self.db.add_to_favorites(
                user_id,
                candidate['id'],
                candidate['first_name'],
                candidate['last_name']
            )

            if success:
                self.send_message(user_id, f"‚ù§Ô∏è {candidate['first_name']} –¥–æ–±–∞–≤–ª–µ–Ω(–∞) –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!")
            else:
                self.send_message(user_id, "‚ùå –≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ –≤ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö")

            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
            self.handle_next_candidate(user_id)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_add_to_favorites –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ.")

    def handle_add_to_blacklist(self, user_id):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫"""
        try:
            if user_id not in self.user_states:
                self.send_message(user_id, "‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫", self.get_main_keyboard())
                return

            state = self.user_states[user_id]
            if 'current_candidate' not in state:
                self.send_message(user_id, "‚ùå –ù–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞")
                return

            candidate = state['current_candidate']

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤ –ë–î
            self.db.add_to_blacklist(user_id, candidate['id'])
            self.send_message(user_id, f"üëé {candidate['first_name']} –¥–æ–±–∞–≤–ª–µ–Ω(–∞) –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫")

            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
            self.handle_next_candidate(user_id)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_add_to_blacklist –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.")

    def handle_show_favorites(self, user_id):
        """–ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö"""
        try:
            favorites = self.db.get_favorites(user_id)

            if not favorites:
                self.send_message(
                    user_id,
                    "üíî –í–∞—à —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç.\n\n–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π!",
                    self.get_main_keyboard()
                )
                return

            message = "‚ù§Ô∏è –í–∞—à–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ:\n\n"
            for i, fav in enumerate(favorites[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 10
                message += f"{i}. {fav['first_name']} {fav['last_name']}\n"
                message += f"   üîó https://vk.com/id{fav['candidate_id']}\n\n"

            if len(favorites) > 10:
                message += f"... –∏ –µ—â–µ {len(favorites) - 10} —á–µ–ª–æ–≤–µ–∫(–∞)"

            self.send_message(user_id, message, self.get_favorites_keyboard())

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_show_favorites –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö.")

    def handle_clear_favorites(self, user_id):
        """–û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö"""
        try:
            self.db.clear_favorites(user_id)
            self.send_message(
                user_id,
                "üóëÔ∏è –°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω!",
                self.get_main_keyboard()
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_clear_favorites –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö.")

    def handle_settings(self, user_id):
        """–ü–æ–∫–∞–∑ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_info = self.db.get_user(user_id)
            if not user_info:
                self.send_message(user_id, "‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
                return

            sex_text = "–ù–µ —É–∫–∞–∑–∞–Ω"
            if user_info.get('sex') == 1:
                sex_text = "–ñ–µ–Ω—Å–∫–∏–π"
            elif user_info.get('sex') == 2:
                sex_text = "–ú—É–∂—Å–∫–æ–π"

            settings_text = f"""‚öôÔ∏è –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞:

üöª –ü–æ–ª: {sex_text}
üéÇ –í–æ–∑—Ä–∞—Å—Ç: {user_info.get('age', '–ù–µ —É–∫–∞–∑–∞–Ω')} –ª–µ—Ç
üèôÔ∏è –ì–æ—Ä–æ–¥: {user_info.get('city', '–ù–µ —É–∫–∞–∑–∞–Ω')}

–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:"""

            self.send_message(user_id, settings_text, self.get_settings_keyboard())

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_settings –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫.")

    def handle_change_sex(self, user_id):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞"""
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª–∞
            self.user_states[user_id] = {'mode': 'waiting_sex'}

            message = """üöª –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:

–û—Ç–ø—Ä–∞–≤—å—Ç–µ:
1 - –ñ–µ–Ω—Å–∫–∏–π
2 - –ú—É–∂—Å–∫–æ–π

–≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –ø–æ–¥–±–∏—Ä–∞—Ç—å –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ª—é–¥–µ–π."""

            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('1 - –ñ–µ–Ω—Å–∫–∏–π', VkKeyboardColor.POSITIVE)
            keyboard.add_button('2 - –ú—É–∂—Å–∫–æ–π', VkKeyboardColor.PRIMARY)
            keyboard.add_line()
            keyboard.add_button('‚ùå –û—Ç–º–µ–Ω–∞', VkKeyboardColor.NEGATIVE)

            self.send_message(user_id, message, keyboard.get_keyboard())

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_change_sex: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞.")

    def handle_change_age(self, user_id):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞"""
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç–∞
            self.user_states[user_id] = {'mode': 'waiting_age'}

            message = """üéÇ –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ –æ—Ç 18 –¥–æ 80.
–ù–∞–ø—Ä–∏–º–µ—Ä: 25"""

            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('‚ùå –û—Ç–º–µ–Ω–∞', VkKeyboardColor.NEGATIVE)

            self.send_message(user_id, message, keyboard.get_keyboard())

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_change_age: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞.")

    def handle_change_city(self, user_id):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞"""
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞
            self.user_states[user_id] = {'mode': 'waiting_city'}

            message = """üèôÔ∏è –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.
–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞

–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ—Ä–æ–¥–∞:
‚Ä¢ –ú–æ—Å–∫–≤–∞
‚Ä¢ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥
‚Ä¢ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫
‚Ä¢ –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫"""

            keyboard = VkKeyboard(one_time=True)
            keyboard.add_button('–ú–æ—Å–∫–≤–∞', VkKeyboardColor.PRIMARY)
            keyboard.add_button('–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', VkKeyboardColor.PRIMARY)
            keyboard.add_line()
            keyboard.add_button('–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', VkKeyboardColor.PRIMARY)
            keyboard.add_button('–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫', VkKeyboardColor.PRIMARY)
            keyboard.add_line()
            keyboard.add_button('‚ùå –û—Ç–º–µ–Ω–∞', VkKeyboardColor.NEGATIVE)

            self.send_message(user_id, message, keyboard.get_keyboard())

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_change_city: {e}")
            self.send_message(user_id, "‚ùå –û—à–∏–±–∫–∞.")

    def process_settings_input(self, user_id, text):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        try:
            state = self.user_states.get(user_id, {})
            mode = state.get('mode')

            if not mode:
                return False

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–æ–ª–∞
            if mode == 'waiting_sex':
                if text in ['1', '1 - –∂–µ–Ω—Å–∫–∏–π', '–∂–µ–Ω—Å–∫–∏–π', '–∂']:
                    self.db.update_user_sex(user_id, 1)
                    self.send_message(user_id, "‚úÖ –ü–æ–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: –ñ–µ–Ω—Å–∫–∏–π", self.get_settings_keyboard())
                    del self.user_states[user_id]
                    return True
                elif text in ['2', '2 - –º—É–∂—Å–∫–æ–π', '–º—É–∂—Å–∫–æ–π', '–º']:
                    self.db.update_user_sex(user_id, 2)
                    self.send_message(user_id, "‚úÖ –ü–æ–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: –ú—É–∂—Å–∫–æ–π", self.get_settings_keyboard())
                    del self.user_states[user_id]
                    return True
                else:
                    self.send_message(user_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –û—Ç–ø—Ä–∞–≤—å—Ç–µ 1 –∏–ª–∏ 2")
                    return True

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
            elif mode == 'waiting_age':
                try:
                    age = int(text)
                    if 18 <= age <= 80:
                        self.db.update_user_age(user_id, age)
                        self.send_message(user_id, f"‚úÖ –í–æ–∑—Ä–∞—Å—Ç –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: {age} –ª–µ—Ç", self.get_settings_keyboard())
                        del self.user_states[user_id]
                        return True
                    else:
                        self.send_message(user_id, "‚ùå –í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 18 –¥–æ 80 –ª–µ—Ç")
                        return True
                except ValueError:
                    self.send_message(user_id, "‚ùå –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: 25")
                    return True

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
            elif mode == 'waiting_city':
                city = text.strip().lower()  # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥ –≤ —Å–ø–∏—Å–∫–µ
                if city in ['–º–æ—Å–∫–≤–∞', '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥', '–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ø–µ—Ä–º—å', '–∫–∞–∑–∞–Ω—å',
                            '–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥', '—á–µ–ª—è–±–∏–Ω—Å–∫', '—Å–∞–º–∞—Ä–∞', '–æ–º—Å–∫', '—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É',
                            '—É—Ñ–∞', '–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫', '–≤–æ—Ä–æ–Ω–µ–∂', '–≤–æ–ª–≥–æ–≥—Ä–∞–¥', '–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä', '—Å–∞—Ä–∞—Ç–æ–≤',
                            '—Ç—é–º–µ–Ω—å', '—Ç–æ–ª—å—è—Ç—Ç–∏', '–∏–∂–µ–≤—Å–∫', '–µ–ª–∞–±—É–≥–∞', '–Ω–∞–±–µ—Ä–µ–∂–Ω—ã–µ —á–µ–ª–Ω—ã', '–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥']:

                    self.db.update_user_city(user_id, city)

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å
                    updated_user = self.db.get_user(user_id)
                    logger.info(f"–ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥ –≤ –ë–î: '{updated_user.get('city')}'")

                    self.send_message(user_id, f"‚úÖ –ì–æ—Ä–æ–¥ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: {city.title()}", self.get_settings_keyboard())
                    del self.user_states[user_id]
                    return True
                else:
                    self.send_message(user_id,
                                      f"‚ùå –ì–æ—Ä–æ–¥ '{city}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ. –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
                    return True

            return False

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ process_settings_input: {e}")
            return False

    def handle_help(self, user_id):
        """–ü–æ–∫–∞–∑ —Å–ø—Ä–∞–≤–∫–∏"""
        help_text = """‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ VKinder:

üîç –ü–æ–∏—Å–∫ - –ø–æ–∏—Å–∫ –ª—é–¥–µ–π –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞
‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω—ã–µ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–º –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)

–í–æ –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞:
‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ - –¥–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ
üëé –í —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ - –±–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
‚ñ∂Ô∏è –°–ª–µ–¥—É—é—â–∏–π - –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —á–µ–ª–æ–≤–µ–∫—É

üìû –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞: karalash.anka@yandex.ru"""

        self.send_message(user_id, help_text, self.get_main_keyboard())

    def handle_message(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user_id = event.user_id
        message = event.text.lower().strip()

        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã –≤–≤–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            if self.process_settings_input(user_id, message):
                return

            # –û—Ç–º–µ–Ω–∞
            if message in ['‚ùå –æ—Ç–º–µ–Ω–∞', '–æ—Ç–º–µ–Ω–∞']:
                if user_id in self.user_states:
                    del self.user_states[user_id]
                self.send_message(user_id, "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ", self.get_main_keyboard())
                return

            # –ö–æ–º–∞–Ω–¥—ã –∏ –∫–Ω–æ–ø–∫–∏
            if message in ['/start', '–Ω–∞—á–∞—Ç—å', '–ø—Ä–∏–≤–µ—Ç', '—Å—Ç–∞—Ä—Ç']:
                self.handle_start(user_id)

            elif message in ['üîç –ø–æ–∏—Å–∫', '–ø–æ–∏—Å–∫']:
                self.handle_search(user_id)

            elif message in ['‚ñ∂Ô∏è —Å–ª–µ–¥—É—é—â–∏–π', '—Å–ª–µ–¥—É—é—â–∏–π', '–¥–∞–ª–µ–µ']:
                self.handle_next_candidate(user_id)

            elif message in ['‚ù§Ô∏è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', '–≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', '–ª–∞–π–∫']:
                self.handle_add_to_favorites(user_id)

            elif message in ['üëé –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', '–≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫', '–¥–∏–∑–ª–∞–π–∫']:
                self.handle_add_to_blacklist(user_id)

            elif message in ['‚ù§Ô∏è –∏–∑–±—Ä–∞–Ω–Ω—ã–µ', '–∏–∑–±—Ä–∞–Ω–Ω—ã–µ']:
                self.send_message(user_id, "‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω—ã–µ:", self.get_favorites_keyboard())

            elif message in ['üìã –ø–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö', '–ø–æ–∫–∞–∑–∞—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö']:
                self.handle_show_favorites(user_id)

            elif message in ['üóëÔ∏è –æ—á–∏—Å—Ç–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö', '–æ—á–∏—Å—Ç–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö']:
                self.handle_clear_favorites(user_id)

            elif message in ['‚öôÔ∏è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏', '‚öô –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞']:
                self.handle_settings(user_id)

            elif message in ['üöª –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª', '–∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª', '–ø–æ–ª']:
                self.handle_change_sex(user_id)

            elif message in ['üéÇ –∏–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç', '–∏–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç', '–≤–æ–∑—Ä–∞—Å—Ç']:
                self.handle_change_age(user_id)

            elif message in ['üèôÔ∏è –∏–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥', '–∏–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥', '–≥–æ—Ä–æ–¥', 'üèô –∏–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥']:
                self.handle_change_city(user_id)

            elif message in ['üìä –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', '–ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏']:
                self.handle_settings(user_id)

            elif message in ['üè† –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', '–º–µ–Ω—é']:
                self.send_message(
                    user_id,
                    "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                    self.get_main_keyboard()
                )

            elif message in ['‚ÑπÔ∏è –ø–æ–º–æ—â—å', '–ø–æ–º–æ—â—å', 'help']:
                self.handle_help(user_id)

            else:
                # –õ–æ–≥–∏—Ä—É–µ–º –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                logger.info(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç {user_id}: '{message}'")

                # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
                self.send_message(
                    user_id,
                    f"ü§î –ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É '{event.text}'.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:",
                    self.get_main_keyboard()
                )

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {user_id}: {e}")
            self.send_message(
                user_id,
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                self.get_main_keyboard()
            )

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("VKinder bot –∑–∞–ø—É—â–µ–Ω!")
        print("ü§ñ VKinder bot –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")

        try:
            for event in self.longpoll.listen():
                if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                    self.handle_message(event)

        except KeyboardInterrupt:
            logger.info("VKinder bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            print("\nüõë VKinder bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

        except Exception as e:
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

        finally:
            self.db.close()


if __name__ == "__main__":
    bot = VKinderBot()
    bot.run()